swagger: '2.0'
info:
  version: '1.0.0'
  title: Sample Application Flow OAuth2 Project
  description: This is an example of using OAuth2 Application Flow in a specification to describe security to your API.

 
# Under securityDefinitions we declare which security schemes can be used.
# These definitions do not affect to the operations, but can be applied
# using the 'security' key at the global level or the operation level.
# In this sample, we'll see how to apply the security definition globally,
# and override it at the operation level.
#
# Note that for Application Flow, you must provide the Token URL.
securityDefinitions:
  application:
    type: oauth2
    # This should be updated to the Token URL of your OAuth provider.
    tokenUrl: http://example.com/oauth/token
    flow: application
    scopes:
      write: allows modifying resources
      read: allows reading resources

# Here we apply the security flow called 'application' globally to all the operations in the spec. 
# This security scheme is defined above in the 'securityDefinitions' section.
# Global security can be overridden an operation level as seen in the example below
security:
  - application:
    - read
    - write
paths:
  /user/login:
    # In this operation we do not apply the security, because it was applied globally above.
    # The security will be applied to this operation for that reason.
    post:
      summary: 로그인
      description: 사용자의 아이디와 비밀번호 정보를 받아와 유효성체크를 하고 로그인 성공여부를 반환한다.
      responses:
        200:
          description: OK

  /user/signup:
    post:
      summary: 회원가입
      description: 유저의 정보를 받아와 회원으로 등록한다.
      security: [ ]
      responses:
        200:
          description: OK
          
  /user/logout:
    post:
      summary: 로그아웃
      description: 사용자를 로그아웃 상태로 만든다.
      responses:
        200:
          description: OK
          
  /user/details:
    get:
      summary: 회원정보 조회
      description: 로그인 된 사용자의 상세 정보를 보여준다.
      responses:
        200:
          description: OK
          
  /user/update:
    patch:
      summary: 회원정보 수정
      description: 사용자의 회원정보를 수정한다.
      responses:
        200:
          description: OK
  
  /user/delete:
    delete:
      summary: 회원탈퇴
      description: DB에서 회원 정보를 삭제한다.
      responses:
        200:
          description: OK
          
  /user/kakao/login:
    get:
      summary: 카카오 로그인
      description: 카카오 api를 연동해 소셜로그인을 한다.
      responses:
        200:
          description: OK
          
  /user/kakao/login/callback:
    post:
      summary: 카카오 로그인 콜백함수
      description: 카카오 로그인 콜백함수.
      responses:
        200:
          description: OK


# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /hyeyeon-sun/test_project/1.0.0
schemes:
 - https